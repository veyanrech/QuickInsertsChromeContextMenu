{"version":3,"file":"content.js","mappings":";;;;;;;;;;AAAA;AAEA;;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvFA;AAEA;;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAqBA;;AAEA;AAAA;AAZA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;;AAEA;;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;A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","sources":["webpack://form-filler-extension/./Actions_TAG.js","webpack://form-filler-extension/./Actions_ITEM.js","webpack://form-filler-extension/./Actions.js","webpack://form-filler-extension/./dialog.js","webpack://form-filler-extension/./index.js"],"sourcesContent":["export class Tags {\n    \n    // #_db = null;\n\n    constructor(db) {\n        // this.#_db = db;\n    }\n\n    addTag(tagValue) {\n        // const idres = await this.#_db.addData(\"Tags\", new tagModel(null, tagValue).returnValue())\n        // console.log(\"tag actions add tag id\", idres);\n        // return idres;\n        console.log(\"ADD TAG\",tagValue);\n\n        return new Promise((res,rej)=>{\n            chrome.runtime.sendMessage({\n                action: \"SAVEDATA\",\n                objectStorage: \"Tags\",\n                data: new tagModel(null, tagValue).returnValue()\n            }, (response) => {\n                console.log(\"ADD TAG response\",response);\n                res(response);\n            });\n        })\n\n    }\n\n    removeTag(tagID) {\n        //remove all items with tagID\n        // return this.#_db.removeData(\"Tags\", tagID);\n        return new Promise((res,rej)=>{\n            chrome.runtime.sendMessage({\n                action: \"DELETEDATA\",\n                objectStorage: \"Tags\",\n                id: tagID\n            }, (response) => {\n                res(response);\n            });\n        })\n    }\n\n    updateTag(tagID, tagData) {\n        //update tag name\n    }\n\n    getTagById(tagID) {\n        // return this.#_db.getData(\"Tags\", tagID);\n        return new Promise((res,rej)=>{\n            chrome.runtime.sendMessage({\n                action: \"GETDATABYID\",\n                objectStorage: \"Tags\",\n                id: tagID\n            }, (response) => {\n                res(response);\n            });\n        })\n    }\n\n    getAllTags() {\n        // return this.#_db.getAllData(\"Tags\");        \n        return new Promise((res,rej)=>{\n            chrome.runtime.sendMessage({\n                action: \"GETALLDATA\",\n                objectStorage: \"Tags\"\n            }, (response) => {\n                res(response);\n            });\n        })\n    }\n}\n\nfunction tagModel(id, name) {\n    this.Id = id || 0;\n    this.Name = name || \"Tag\";\n    this.Items = [];\n}\n\ntagModel.prototype.returnValue = function() {\n    if (!this.Id) {\n        return {\n            Name: this.Name\n        };\n    }\n    return {\n        Id: this.Id,\n        Name: this.Name\n    }\n}","export class Items {\n\n    // #_db = null;\n\n    constructor() {\n        // this.#_db = db;\n    }\n\n    addItem(itemValue, tagId) {\n        // return this.#_db.addData(\"Items\", new itemsModel(null, itemValue, tagId).returnValue());\n        return new Promise((res,rej)=>{\n            chrome.runtime.sendMessage({\n                action: \"SAVEDATA\",\n                objectStorage: \"Items\",\n                data: new itemsModel(null, itemValue, tagId).returnValue()\n            }, (response) => {\n                res(response);\n\n                console.log(\"ADD ITEM SAVE DATA response\",response);\n\n                chrome.runtime.sendMessage({\n                    action: \"GETDATABYID\",\n                    objectStorage: \"Tags\",\n                    id: tagId\n                }, (response) => {\n                    console.log(\"response\",response);\n                });\n            });\n        })\n    }\n\n    removeItem(item_id) {\n\n        // this.#_db.removeData(\"Items\", item_id);\n        return new Promise((res,rej)=>{\n            chrome.runtime.sendMessage({\n                action: \"DELETEDATA\",\n                objectStorage: \"Items\",\n                id: item_id\n            }, (response) => {\n                res(response);\n            });\n        })\n\n    }\n\n    updateItem(tag_id, item_id, value) {\n\n    }\n\n    getItemsByTagId(tag_id) {\n        // return new Promise((res,rej) => {\n        //     this.#_db.getAllData(\"Items\", (result) => {\n        //         if (!tag_id) return rej(\"No tag id provided\");\n        //         if (!result) return rej(\"No items found\");\n        //         res( result.filter(item => item.TagId === tag_id) );\n        //     });\n        // })\n\n        console.log(\"GET ITEMS BY TAG ID\",tag_id);\n\n        return new Promise((res,rej)=>{\n            chrome.runtime.sendMessage({\n                action: \"GETDATA\",\n                objectStorage: \"Items\",\n                id: tag_id\n            }, (response) => {\n                res(response);\n            });\n        })\n    }\n\n    getAllItems() {\n        // return new Promise((res,rej) => {\n        //     this.#_db.getAllData(\"Items\", (result) => {\n        //         res(result);\n        //     });\n        // })\n    }\n\n    getFirstItem(tag_id) {}\n}\n\nfunction itemsModel(id,v,tid){\n    this.Id = id || 0;\n    this.Value = v || \"Item\";\n    this.TagId = tid || 0;\n}\n\nitemsModel.prototype.returnValue = function() {\n    if (!this.Id) {\n        return {\n            Value: this.Value,\n            TagId: this.TagId\n        };\n    }\n    return {\n        Id: this.Id,\n        Value: this.Value,\n        TagId: this.TagId\n    }\n}","import {Tags} from './Actions_TAG';\nimport {Items} from './Actions_ITEM';\n\n/**\n * @typedef {import('./Actions_TAG').Tags} Tags\n * @typedef {import('./Actions_ITEM').Items} Items\n *\n * @typedef tagItem\n * @property {number} id\n * @property {HTMLElement} htmlelement\n */\n\nexport default class Actions {\n\n    /**\n     * @type {Tags}\n     */\n    #_tagsdb = null;\n\n    /**\n     * @type {Items}\n     */\n    #_itemsdb = null;\n\n    // #_db = null;\n\n    constructor(db) {\n        this.data = [];\n\n        // this.#_db = db;\n\n        this.#_tagsdb = new Tags();\n        this.#_itemsdb = new Items();\n\n        console.log(\"Actions\",this.#_tagsdb,this.#_itemsdb);\n    }\n\n    async addTag(tagValue) {\n        const newtagid = await this.#_tagsdb.addTag(tagValue);\n        \n        return newtagid;\n    }\n\n    async getAllTags() {\n        return await this.#_tagsdb.getAllTags();\n    }\n\n    /**\n     * \n     * @param {number} tagid \n     * @param {string} itemValue \n     */\n    async addItem(tagid, itemValue) {\n        const newitemid = await this.#_itemsdb.addItem(itemValue, tagid);\n        \n        return newitemid;\n    }\n\n    async getItemsByTagId(tagid) {\n        return await this.#_itemsdb.getItemsByTagId(tagid);\n    }\n\n    async removeTag(tagID) {\n\n        //alert i\n\n        //remove all items with tagID\n        return this.#_tagsdb.removeTag(tagID);\n    }\n\n    moveItem(itemID, tagID) {\n        \n    }\n\n}","import Actions from \"./Actions\";\n\nexport const dialogHtmlCode = ``+\n    // <dialog id=\"fast-past-dialog-id\">\n        `<div style=\"\n            display: flex;\n            flex-flow: column;\n            position: relative;\n            \">\n            <div class=\"header\">\n                <h1>Fast Past Items Menu</h1>\n                <div class=\"container column-2\">\n                    <div class=\"column-75\"></div>\n                    <div class=\"column-25\">\n                        <button id=\"close\">Close X</button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"body\">\n                <div class=\"container\">\n                    <div class=\"column-35\">\n                        <div class=\"column-header\">\n                            <div class=\"container column\">\n                                <div class=\"column-75\">\n                                    <h2>Tags</h2>\n                                </div>\n                                <div class=\"column-25\">\n                                    <button id=\"add-tag\">Add +</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"column content tags\"></div>\n                    </div>\n                    <div class=\"vertical-line\" style=\"flex-grow: 1;\"></div>\n                    <div class=\"column-65\">\n                        <div class=\"column-header\">\n                            <div class=\"container column\">\n                                <div class=\"column-75\">\n                                    <h2>Items</h2>\n                                </div>\n                                <div class=\"column-25\">\n                                    <button id=\"add-item\">Add +</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"column content items\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>`;\n    // </dialog>`;\n\n    \nexport const dialogCssCode = `\n#fast-past-dialog-id {\n    all: initial;\n    font-family: system-ui, -apple-system, sans-serif;\n    color: #333;\n    background: white;\n    border-radius: 8px;\n    padding: 0;\n    margin: auto 50%;\n    max-width: 800px;\n    min-width: 250px;\n    max-height: 60vh;\n    min-height: 250px;\n    border: none;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    display: none;\n    inset-block-start: 0px;\n    inset-block-end: 0px;\n    position: fixed;\n    transform: translate(-50%);\n    width: calc(100% - 2em - 6px);\n    height: calc(100% - 2em - 6px);\n}\n\n#fast-past-dialog-id::backdrop {\n    background: rgba(0, 0, 0, 0.5);\n}\n\n#fast-past-dialog-id[open] {\n    display: block;\n}\n\n#fast-past-dialog-id * {\n    all: initial;\n    box-sizing: border-box;\n    font-family: system-ui, -apple-system, sans-serif;\n    font-size: 1rem;\n}\n\n#fast-past-dialog-id .header {\n    padding: .1em .25em;\n    border-bottom: 1px solid #e0e0e0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    max-height: calc(1.5em + 2px + .5em);\n}\n\n#fast-past-dialog-id .header h1 {\n    padding: .15em .25em;\n    font-size: 1.5em;\n    display: block;\n}\n\n#fast-past-dialog-id .header button#close {\n    cursor: pointer;\n    padding: .25em;\n    border-radius: .25em;\n    border: 1px solid #e0e0e0;\n    font-size: .75em;\n}\n\n#fast-past-dialog-id .body {\n    padding: .25em;\n    display: flex;\n    flex-flow: column;\n    max-height: calc(60vh - calc(1.5em + 2px + .5em));\n}\n\n#fast-past-dialog-id .container {\n    display: flex;\n    flex-flow: row;\n    padding: .25em;\n}\n\n#fast-past-dialog-id .container .column-header {\n    max-height: 30px;\n}\n\n#fast-past-dialog-id .container .column-header {\n    max-height: 30px;\n}\n\n#fast-past-dialog-id .container.column {\n    display: flex;\n}\n\n#fast-past-dialog-id .column-25 {\n    flex-grow: 25;\n}\n\n#fast-past-dialog-id .column-35 {\n    flex-grow: 35;\n    width: 35%;\n}\n\n#fast-past-dialog-id .column-65 {\n    flex-grow: 65;\n    width: 65%;\n}\n\n#fast-past-dialog-id .column-75 {\n    flex-grow: 75;\n}\n\n#fast-past-dialog-id .vertical-line {\n    border-left: 1px solid #e0e0e0;\n    margin: 0;\n}\n\n#fast-past-dialog-id .column-header {\n    border-bottom: 1px solid #e0e0e0;\n    display: block;\n}\n\n#fast-past-dialog-id .column.content.tags, #fast-past-dialog-id .column.content.items {\n    padding: .25em;\n    display: flex;\n    flex-flow: column;\n\n    min-height: 175px;\n    max-height: calc(60vh - calc(1.5em + 2px + .5em) - 30px - 1.5em);\n\n    overflow: auto;\n}\n\n#fast-past-dialog-id .tag-container, #fast-past-dialog-id .item-container {\n    display: flex;\n    flex-flow: row;\n    padding: .25em;\n    cursor: pointer;\n    border-bottom: 1px solid transparent;\n}\n\n#fast-past-dialog-id .tag-container.selected {\n    background-color:rgb(61, 61, 61);\n    border-bottom: 1px solid rgb(224, 224, 224);\n    color: white;\n}\n\n#fast-past-dialog-id .tag-container:hover, #fast-past-dialog-id .item-container:hover {\n    background-color: #f0f0f0;\n    border-bottom: 1px solid #e0e0e0;\n}\n\n#fast-past-dialog-id .tag-container .tag-content  {\n    flex-grow: 85;\n    max-width: 250px;\n}\n\n#fast-past-dialog-id .tag-container .tag-action  {\n    flex-grow: 15;\n    max-width: 75px;\n}\n\n\n#fast-past-dialog-id .item-container .item-action button, #fast-past-dialog-id .tag-container .tag-action button {\n    cursor: pointer;\n    font-size: .75em;\n    border: 1px solid #e0e0e0;\n    padding: .07em;\n}\n\n#fast-past-dialog-id .item-container .item-action button:hover, #fast-past-dialog-id .tag-container .tag-action button:hover {\n    border: 1px solid #7e7e7e;\n    background-color: #e0e0e0;\n}\n\n#fast-past-dialog-id .add-item, #fast-past-dialog-id .edit-item, #fast-past-dialog-id .delete-item, #fast-past-dialog-id .add-tag, #fast-past-dialog-id .edit-tag, #fast-past-dialog-id .delete-tag {\n    cursor: pointer;\n    font-size: .75em;\n    border: 1px solid #e0e0e0;\n    padding: .07em;\n}\n\n#fast-past-dialog-id #add-tag, #fast-past-dialog-id #add-item{\n    cursor: pointer;\n    border: 1px solid #e0e0e0;\n    border-radius: .25em;\n    padding: .07em;\n}\n\n#fast-past-dialog-id .column.content.tags {\n    max-width: 400px;\n}\n`;\n\nexport function CloseDialog(){\n    var dialog = document.getElementById('fast-past-dialog-id');\n    dialog.close();\n    removeESCEventListenerONDialogClosed(dialog);\n    detachCloseEventToCloseButton();\n}\n\n\n\n/**\n * \n * @param {DialogUI} dialogui \n */\nexport function ShowDialog(dialogui){\n    dialogui.show();\n}\n\nfunction initialLoadtags(app, tagsColumn, itemsColumn, ) {}\n\nfunction selectTagEvent(app, tagid, tagsColumn, itemsColumn) {}\n\nfunction addESCEventListenerONDialogOpened(dialogElement) {\n    if (!dialogElement) {\n        return;\n    }\n\n    if (dialogElement.hasAttribute(\"open\")) {\n        document.addEventListener(\"keydown\", (e) => {\n            if (e.key === \"Escape\") {\n                dialogElement.close();\n            }\n        });\n    }\n}\n\nfunction removeESCEventListenerONDialogClosed(dialogElement) {\n    if (dialogElement) {\n        document.removeEventListener(\"keydown\", (e) => {\n            if (e.key === \"Escape\") {\n                dialogElement.close();\n            }\n        });\n    }\n}\n\nfunction attachCloseEventToCloseButton() {\n    const closeButton = document.querySelector(\"#fast-past-dialog-id #close\");\n\n    closeButton.addEventListener(\"click\", () => {\n        CloseDialog();\n    });\n}\n\nfunction detachCloseEventToCloseButton() {\n    const closeButton = document.querySelector(\"#fast-past-dialog-id #close\");\n\n    closeButton.removeEventListener(\"click\", () => {\n        CloseDialog();\n    });\n}\n\nfunction appendDialogToBody() {\n  \n    // Create the dialog box\n    const dialogBox = document.createElement(\"dialog\");\n    dialogBox.id = \"fast-past-dialog-id\";\n\n    dialogBox.innerHTML = dialogHtmlCode;\n\n    document.body.appendChild(dialogBox);\n  \n}\n\n\nlet cssWasAdded = false;\n\nexport function AddStyles() {\n    if (cssWasAdded) {\n        return;\n    }\n    const style = document.createElement('style');\n    style.innerHTML = dialogCssCode;\n\n    document.head.appendChild(style);\n\n    cssWasAdded = true;\n}\n/**\n * \n * @param {DialogUI} app\n * @param {number} tagid \n * @param {string} tagname \n * @returns Object{\n *     id: number,\n *    htmlelement: HTMLElement}\n */\nfunction tagRender(app, tagid, tagname) {\n\n    const cont = document.createElement('div');\n    cont.classList.add('tag-container');\n\n    const html = `<div class=\"tag-content\">${tagname}</div>`+\n    `<div class=\"tag-action\">\n        <button class=\"edit-tag\" onclick=\"tagedit(${tagid})\">Edit</button>\n        <button class=\"delete-tag\" onclick=\"tagdelete(${tagid})\">Del X</button>\n    </div>`;\n\n    cont.innerHTML = html;\n\n    cont.onclick = () => {\n\n        const thisTagID = tagid;\n        const thisCont = cont;\n\n        app.setCurrentTag((()=>{\n            return {\n                id:thisTagID,\n                htmlelement:thisCont\n            };\n        })());\n    }\n\n    return {\n        id:tagid,\n        htmlelement:cont\n    };\n}\n\nlet tagdelete = null;\n\n/**\n * \n * @param {Actions} app \n * @param {*} tagid \n * @param {*} itemid \n * @param {*} itemvalue \n * @returns \n */\nfunction itemRender(app, tagid, itemid, itemvalue) {\n\n    const cont = document.createElement('div');\n    cont.classList.add('item-container');\n\n    const html = `<div class=\"item-content\">${itemvalue}</div>` +\n    `<div class=\"item-action\">\n        <button class=\"edit-item\" onclick=\"itemedit(${itemid})\">Edit</button>\n        <button class=\"delete-item\" onclick=\"itemdelete(${itemid})\">Del X</button>\n    </div>`;\n\n    cont.innerHTML = html;\n\n    cont.onclick = () => {\n        navigator.clipboard.writeText(itemvalue).then(() => {\n            console.log('Async: Copying to clipboard was successful!');\n        }, (err) => {\n            console.error('Async: Could not copy text: ', err);\n        });\n    }\n\n    return {\n        id:itemid,\n        htmlelement:cont\n    };\n\n}\n\nfunction itemdelete(itemid) {\n    console.log(\"itemdelete\", itemid);\n}\n\nexport class DialogUI {\n\n    tagsColumn = null;\n    itemsColumn = null;\n\n    addTagButton = null;\n    addItemButton = null;\n\n    dialog = null;\n\n    #_items = {};\n\n    /**\n     * @type {tagItem}\n     */\n    currentTag = null;\n\n    /*\n    * @type {Object.<number, tagItem>}\n    */\n    tags = {};\n\n    /**\n     * \n     * @param {Actions} app \n     */\n    constructor(app) {\n        this.app = app;\n\n        if (!document.getElementById('fast-past-dialog-id')) {\n            appendDialogToBody();\n        }\n\n        tagdelete = (tagid) => {\n            app.removeTag(tagid);\n            if (this.tags[tagid]) {\n                this.tags[tagid].htmlelement.remove();\n            }\n        };\n\n        this.init();\n    }\n\n    async show() {\n\n        if (!document.getElementById('fast-past-dialog-id')) {\n            appendDialogToBody();\n            this.init();\n            Object.keys(this.tags).forEach((key) => {\n                this.tagsColumn.appendChild(this.tags[key].htmlelement);\n            });\n        }\n\n        this.dialog.showModal();\n        const focusedInput = document.activeElement;\n    }\n\n    async init() {\n        this.dialog = document.getElementById('fast-past-dialog-id');\n\n        addESCEventListenerONDialogOpened(this.dialog);\n        \n        attachCloseEventToCloseButton();\n\n        this.tagsColumn = document.querySelector(\"#fast-past-dialog-id .column.content.tags\");\n        this.itemsColumn = document.querySelector(\"#fast-past-dialog-id .column.content.items\");\n\n        this.addTagButton = document.getElementById(\"add-tag\");\n        this.addItemButton = document.getElementById(\"add-item\");\n\n        this.addTagButton.addEventListener(\"click\", async (e) => {\n            // Add Tag\n            let userinput = window.prompt(\"Add Tag\", \"New Tag Name\");\n            if (userinput == null) {\n                // Add Tag to the list\n                alert(\"Tag name is required\");\n                return\n            }\n    \n            let newtagid = await this.app.addTag(userinput)\n\n            console.log(\"new tag id\", newtagid, this.tags);\n\n            this.tags[newtagid] = tagRender(this, newtagid, userinput);\n\n            this.tagsColumn.appendChild(this.tags[newtagid].htmlelement);\n        });\n\n\n        this.addItemButton.addEventListener(\"click\", async (e) => {\n            // Add Item\n            let userinput = window.prompt(\"Add Item\", \"New Item Name\");\n            if (userinput == null) {\n                // Add Item to the list\n                alert(\"Item name is required\");\n                return\n            }\n\n            let newitemid = await this.app.addItem(this.getCurrentTag().id, userinput);\n\n            this.#_items[newitemid] = itemRender(this, this.getCurrentTag().id, newitemid, userinput);\n\n            this.itemsColumn.appendChild(this.#_items[newitemid].htmlelement);\n        });\n\n        let tags = await this.app.getAllTags();\n        tags?.forEach(element => {\n            this.tags[element.id] = tagRender(this, element.id, element.Name);\n            this.tagsColumn.appendChild(this.tags[element.id].htmlelement);\n        });\n\n        console.log(\"tags\", tags);\n\n    }\n\n    /**\n     * \n     * @param {tagItem} tag \n     */\n    setCurrentTag(tag) {\n\n        if (this.currentTag){\n            this.currentTag.htmlelement.classList.remove(\"selected\");\n        }\n\n        this.currentTag = tag;\n\n        this.tags[tag.id]\n            .htmlelement\n            .classList.add(\"selected\");\n\n            this.itemsColumn.innerHTML = \"No data found\";\n\n        this.app.getItemsByTagId(tag.id).then((items) => {\n            if (!items || items.length == 0) return;\n            this.itemsColumn.innerHTML = \"\";\n            items.forEach(element => {\n                this.#_items[element.id] = itemRender(this, element.TagId, element.id, element.Value);\n                this.itemsColumn.appendChild(this.#_items[element.id].htmlelement);\n            });\n        });\n    }\n\n    /**\n     * \n     * @returns {tagItem}\n     */\n    getCurrentTag() {\n        return this.currentTag;\n    }\n}","import Actions from \"./Actions\";\nimport { AddStyles, ShowDialog, DialogUI } from \"./dialog\";\nconst APP = new Actions();\nconst UI = new DialogUI(APP);\n\nchrome.runtime.onMessage.addListener(function(msg, sender, sendResponse) {\n\n    AddStyles();\n\n    if (msg.action == 'open_dialog_box') {\n        ShowDialog(UI);\n    }\n\n    return true;\n  \n});"],"names":[],"sourceRoot":""}